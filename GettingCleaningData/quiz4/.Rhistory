onlyVC <- subset(ToothGrowth, supp == "VC")
onlyOJ <- subset(ToothGrowth, supp == "OJ")
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, mean))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, mean))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=levels(onlyVC$dose))
levels(onlyVC$dose)
axis(1,at=levels(onlyVC$dose))
onlyVC <- subset(ToothGrowth, supp == "VC")
onlyOJ <- subset(ToothGrowth, supp == "OJ")
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, mean))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, mean))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n")
lines(growthOJ[,2], t="l",col="blue")
#axis(1,at=levels(onlyVC$dose))
onlyVC <- subset(ToothGrowth, supp == "VC")
onlyOJ <- subset(ToothGrowth, supp == "OJ")
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, mean))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, mean))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=1:3, labels=levels(onlyVC$dose))
onlyVC <- subset(ToothGrowth, supp == "VC")
onlyOJ <- subset(ToothGrowth, supp == "OJ")
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, mean))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, mean))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="dosage (mg)", ylab = "tooth growth")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=1:3, labels=levels(onlyVC$dose))
onlyVC <- subset(ToothGrowth, supp == "VC")
onlyOJ <- subset(ToothGrowth, supp == "OJ")
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, mean))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, mean))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="dosage (mg)", ylab = "tooth growth")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=1:3, labels=levels(onlyVC$dose))
legend("bottomright",legend=c("VC", "OJ"), col=c("red", "blue"), lty=c(1,1))
onlyVC <- subset(ToothGrowth, supp == "VC")
onlyOJ <- subset(ToothGrowth, supp == "OJ")
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, mean))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, mean))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="dosage (mg)", ylab = "tooth growth")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=1:3, labels=levels(onlyVC$dose))
legend("bottomright",legend=c("VC", "OJ"), col=c("red", "blue"))
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, sd))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, sd))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="dosage (mg)", ylab = "tooth growth")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=1:3, labels=levels(onlyVC$dose))
legend("bottomright",legend=c("VC", "OJ"), col=c("red", "blue"), lty=c(1,1))
std_err <- function(x) sd(x) / sqrt(length(x))
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, std_err))
> growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, std_err))
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, std_err))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, std_err))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="dosage (mg)", ylab = "tooth growth mean")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=1:3, labels=levels(onlyVC$dose))
legend("bottomright",legend=c("VC", "OJ"), col=c("red", "blue"), lty=c(1,1))
```{r}
onlyVC <- subset(ToothGrowth, supp == "VC")
onlyOJ <- subset(ToothGrowth, supp == "OJ")
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, mean))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, mean))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="dosage (mg)", ylab = "tooth growth mean")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=1:3, labels=levels(onlyVC$dose))
legend("bottomright",legend=c("VC", "OJ"), col=c("red", "blue"), lty=c(1,1))
```
```{r}
onlyVC <- subset(ToothGrowth, supp == "VC")
onlyOJ <- subset(ToothGrowth, supp == "OJ")
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, mean))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, mean))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="dosage (mg)", ylab = "tooth growth mean")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=1:3, labels=levels(onlyVC$dose))
legend("bottomright",legend=c("VC", "OJ"), col=c("red", "blue"), lty=c(1,1))
```
onlyVC <- subset(ToothGrowth, supp == "VC")
onlyOJ <- subset(ToothGrowth, supp == "OJ")
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, mean))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, mean))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="dosage (mg)", ylab = "tooth growth mean")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=1:3, labels=levels(onlyVC$dose))
legend("bottomright",legend=c("VC", "OJ"), col=c("red", "blue"), lty=c(1,1))
onlyVC <- subset(ToothGrowth, supp == "VC")
onlyOJ <- subset(ToothGrowth, supp == "OJ")
growthVC <- cbind(levels(onlyVC$dose),tapply(onlyVC$len, onlyVC$dose, mean))
growthOJ <- cbind(levels(onlyVC$dose),tapply(onlyOJ$len, onlyOJ$dose, mean))
plot(growthVC[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="dosage (mg)", ylab = "tooth growth mean")
lines(growthOJ[,2], t="l",col="blue")
axis(1,at=1:3, labels=levels(onlyVC$dose))
legend("bottomright",legend=c("VC", "OJ"), col=c("red", "blue"), lty=c(1,1))
only.5 <- subset(ToothGrowth, dose == "0.5")
only1 <- subset(ToothGrowth, dose == "1")
only2 <- subset(ToothGrowth, dose == "2")
growth.5 <- cbind(levels(only.5$supp),tapply(only.5$len, only.5$supp, mean))
growth1 <- cbind(levels(only1$supp),tapply(only1$len, only1$supp, mean))
growth2 <- cbind(levels(only2$supp),tapply(only2$len, only2$supp, mean))
plot(growth.5[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="supplement", ylab = "tooth growth mean")
lines(growth1[,2], t="l",col="blue")
lines(growth2[,2], t="l",col="yellow")
axis(1,at=1:3, labels=levels(only1$supp))
legend("bottomright",legend=c("0.5", "1", "2"), col=c("red", "blue", "yellow"), lty=c(1,1))
only.5 <- subset(ToothGrowth, dose == "0.5")
only1 <- subset(ToothGrowth, dose == "1")
only2 <- subset(ToothGrowth, dose == "2")
growth.5 <- cbind(levels(only.5$supp),tapply(only.5$len, only.5$supp, mean))
growth1 <- cbind(levels(only1$supp),tapply(only1$len, only1$supp, mean))
growth2 <- cbind(levels(only2$supp),tapply(only2$len, only2$supp, mean))
plot(growth.5[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="supplement", ylab = "tooth growth mean")
lines(growth1[,2], t="l",col="blue")
lines(growth2[,2], t="l",col="yellow")
axis(1,at=1:3, labels=levels(only1$supp))
legend("bottomright",legend=c("0.5", "1", "2"), col=c("red", "blue", "yellow"), lty=c(1,1))
only.5 <- subset(ToothGrowth, dose == "0.5")
only1 <- subset(ToothGrowth, dose == "1")
only2 <- subset(ToothGrowth, dose == "2")
growth.5 <- cbind(levels(only.5$supp),tapply(only.5$len, only.5$supp, mean))
growth1 <- cbind(levels(only1$supp),tapply(only1$len, only1$supp, mean))
growth2 <- cbind(levels(only2$supp),tapply(only2$len, only2$supp, mean))
plot(growth.5[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="supplement", ylab = "tooth growth mean")
lines(growth1[,2], t="l",col="blue")
lines(growth2[,2], t="l",col="yellow")
axis(1,at=1:2, labels=levels(only1$supp))
legend("bottomright",legend=c("0.5", "1", "2"), col=c("red", "blue", "yellow"), lty=c(1,1))
only.5 <- subset(ToothGrowth, dose == "0.5")
only1 <- subset(ToothGrowth, dose == "1")
only2 <- subset(ToothGrowth, dose == "2")
growth.5 <- cbind(levels(only.5$supp),tapply(only.5$len, only.5$supp, mean))
growth1 <- cbind(levels(only1$supp),tapply(only1$len, only1$supp, mean))
growth2 <- cbind(levels(only2$supp),tapply(only2$len, only2$supp, mean))
plot(growth.5[,2], t="l", col="red", ylim = c(0,30), xaxt="n", xlab ="supplement", ylab = "tooth growth mean")
lines(growth1[,2], t="l",col="blue")
lines(growth2[,2], t="l",col="yellow")
axis(1,at=1:2, labels=levels(only1$supp))
t.test(subset(ToothGrowth, supp == "VC" && dose == "0.5") - subset(ToothGrowth, supp == "OJ" && dose == "0.5"))
subset(ToothGrowth, supp == "VC" && dose == "0.5"
)
subset(ToothGrowth, supp == "VC" && dose == 0.5
)
subset(ToothGrowth, supp == "VC" & dose == 0.5
)
subset(ToothGrowth, supp == "VC" & dose == "0.5")
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5") - subset(ToothGrowth, supp == "OJ" & dose == "0.5"))
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len - subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len)
t.test(subset(ToothGrowth, supp == "VC" & dose == "1")$len - subset(ToothGrowth, supp == "OJ" & dose == "1")$len)
t.test(subset(ToothGrowth, supp == "VC" & dose == "2")$len - subset(ToothGrowth, supp == "OJ" & dose == "2")$len)
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len - subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len)
qt(.975, 9)
qt(.99, 9)
qt(.999, 9)
qt(.992, 9)
1 - 0.01547
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len, subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len, paired=FALSE, var.equal=TRUE)
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len, subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len, paired=TRUE)
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len - subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len)
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len, subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len, paired=FALSE, var.equal=TRUE)
t.test(subset(ToothGrowth, supp == "VC" & dose == "1")$len, subset(ToothGrowth, supp == "OJ" & dose == "1")$len, paired=FALSE, var.equal=TRUE)
t.test(subset(ToothGrowth, supp == "VC" & dose == "2")$len, subset(ToothGrowth, supp == "OJ" & dose == "2")$len, paired=FALSE, var.equal=TRUE)
qt(.992, 18)
qt(.50, 18)
qt(.60, 18)
qt(.51, 18)
qt(.54, 18)
qt(.53, 18)
qt(.52, 18)
t.test(subset(ToothGrowth, supp == "VC" & dose == "1")$len, subset(ToothGrowth, supp == "OJ" & dose == "1")$len, paired=FALSE, var.equal=FALSE)
help(ToothGrowth)
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len, subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len, paired=FALSE, var.equal=TRUE)
pnorm(0, sd(subset(ToothGrowth, dose == "0.5")$len) )
?pnorm
pnorm(1 - 0.005304,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) )
pnorm(0.95,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) )
pnorm(1.96,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) )
pnorm(,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) , lower.tail = TRUE)
pnorm(1.96,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) , lower.tail = TRUE)
pnorm(1.96,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) , lower.tail = FALSE)
pnorm(4,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) , lower.tail = FALSE)
pnorm(8,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) , lower.tail = FALSE)
pnorm(6,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) , lower.tail = FALSE)
pnorm(7,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) , lower.tail = FALSE)
pnorm(7.5,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) , lower.tail = FALSE)
pnorm(7.1,mean = 0, sd = sd(subset(ToothGrowth, dose == "0.5")$len) , lower.tail = FALSE)
?t.test
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len, subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len, paired=FALSE, var.equal=TRUE)
?t.test
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len, subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len, paired=FALSE, var.equal=TRUE, alternative="greater")
t.test(subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len, subset(ToothGrowth, supp == "VC" & dose == "0.5")$len, paired=FALSE, var.equal=TRUE, alternative="greater")
gettoothlength <- function(the_supp, the_dose) {
subset(ToothGrowth, supp == the_supp & dose == the_dose)
}
t.test(getoothlength("OJ", "0.5"),gettoothlength("VC", "0.5"), paired= FALSE, var.equal=FALSE, alternative="greater")
getoothlength <- function(the_supp, the_dose) {
subset(ToothGrowth, supp == the_supp & dose == the_dose)
}
t.test(getoothlength("OJ", "0.5"),gettoothlength("VC", "0.5"), paired= FALSE, var.equal=FALSE, alternative="greater")
getoothlength("OJ", "0.5")
getoothlength("VC", "0.5"),
getoothlength("VC", "0.5")
t.test(getoothlength("OJ", "0.5"),gettoothlength("VC", "0.5"))
getoothlength <- function(the_supp, the_dose) {
subset(ToothGrowth, supp == the_supp & dose == the_dose)$len
}
t.test(getoothlength("OJ", "0.5"),gettoothlength("VC", "0.5"), paired= FALSE, var.equal=FALSE, alternative="greater")
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len, subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len, paired=FALSE, var.equal=TRUE, alternative="greater")
getoothlength("VC", "0.5")
t.test(getoothlength("OJ", "0.5"),gettoothlength("VC", "0.5"), paired= FALSE, var.equal=FALSE, alternative="greater")
getoothlength("OJ", "0.5")
getoothlength("VC", "0.5")
t.test(getoothlength("OJ", "0.5"),gettoothlength("VC", "0.5"), paired=FALSE, var.equal=FALSE, alternative="greater")
t.test(subset(ToothGrowth, supp == "VC" & dose == "0.5")$len, subset(ToothGrowth, supp == "OJ" & dose == "0.5")$len, paired=FALSE, var.equal=TRUE, alternative="greater")
t.test(getoothlength("OJ", "0.5"),gettoothlength("VC", "0.5"), paired=FALSE, var.equal=FALSE, alternative="greater")
t.test(getoothlength("OJ", "0.5"),gettoothlength("VC", "0.5"), paired=FALSE, var.equal=TRUE, alternative="greater")
subset(ToothGrowth, supp == "VC" & dose == "0.5")$len
getoothlegth("VC", "0.5")
getoothlength("VC", "0.5")
one <- getoothlength("VC", "0.5")
two <- getoothlength("OJ", "0.5")
t.test(one,two)
oj = getoothlength("OJ", "0.5")
vc = getoothlength("VC", "0.5")
t.test(oj,vc, paired= FALSE, var.equal=FALSE)
oj = getoothlength("OJ", "0.5")
vc = getoothlength("VC", "0.5")
t.test(oj,vc, paired= FALSE, var.equal=FALSE, alternative="greater")
oj = getoothlength("OJ", "0.5")
vc = getoothlength("VC", "0.5")
t.test(oj,vc, paired= FALSE, var.equal=FALSE, alternative="greater")
oj = getoothlength("OJ", "1")
vc = getoothlength("VC", "1")
t.test(oj,vc, paired= FALSE, var.equal=FALSE, alternative="greater")
oj = getoothlength("OJ", "2")
vc = getoothlength("VC", "2")
t.test(oj,vc, paired= FALSE, var.equal=FALSE, alternative="greater")
help(ToothGrowth)
?ppois
source('~/workspace/datasciencecoursera/StatInf/spikes/student.R')
source('~/workspace/datasciencecoursera/StatInf/spikes/student.R')
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("RMySQL")
library*httr
library(httr)
library(Hmisc)
install.packages("Hmisc")
library(plyr)
version
library(dplyr)
install.packages("dplyr")
library(swirl)
rm(list = ls())
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -X:size)
select(cran, -(X:size)
)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, counry == "US" | country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 10050, r_os == "linux_gnu")
filter(cran, size > 10050, r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:id_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
head(cran3)
cran
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
sbmit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count)
gather(students, sex, count, -grade)
students2
res <- gather(students2, key=sex_class, value=count)
res <- gather(students2, key=sex_class, value=count, -grade)
res
?separate
separate(data=res, col=sex_class, into=c("sex",'class'))
students
students2
submit()
students3
submit()
submit()
?spread
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
View(failed)
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
Sys.getlocal("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = T)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("192012//")
ymd("1920/12/")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours=hours(now()), minutes=munutes(now()))
this_moment <- update(this_moment, hours=hours(now()), minutes=minutes(now()))
this_moment <- update(this_moment, hours=18, minutes=20)
this_moment
hour(now())
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17 , minutes = 34)
depart
arrive <- nyc + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
setwd("~/workspace/datasciencecoursera/GettingCleaningData/quiz4")
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q1.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q1.R')
DT
strsplit(names(DT))
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q1.R')
strsplit(names(DT), split="wgtp")
strsplit(names(DT), split="wgtp")[123]
strsplit(names(DT), split="wgtp")[123,]
strsplit(names(DT), split="wgtp")[123]
strsplit(names(DT), split="wgtp")[[123]]
names(DT)
strsplit(names(DT), split="wgtp")[[123]]
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q1.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q1.R')
names(DT)
strsplit(names(DT), split="wgtp")[[123]]
View(DT)
strsplit(names(DT), split="wgtp")
colNames
row.names(DT)
col.names(DT)
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q1.R')
setwd("~/workspace/datasciencecoursera/GettingCleaningData/quiz4")
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q1.R')
strsplit(names(DT), split="wgtp")
strsplit(names(DT), split="wgtp")[[123]]
install.packages("quantmod")
setwd("~/workspace/datasciencecoursera/GettingCleaningData/quiz4")
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
View(DT)
DT[-3]
DT$X.3[-3]
DT$X.3[3:]
DT$X.3[-0:4:]
DT$X.3[-0:4]
DT$X.3[-(0:4)]
as.number(DT$X.3[-(0:4)])
as.integer(DT$X.3[-(0:4)])
gsub(DT$X.3[-(0:4)], ",")
?gsub
gsub(",", "", DT$X.3[-(0:4)])
n <- gsub(",", "", DT$X.3[-(0:4)])
as.integer(n)
?mean
mean(as.integer(n), na.rm = T)
as.integer(n)
mean(as.integer(n), na.rm = TRUE)
mean(as.integer(n))
mean(as.integer(n), na.rm = TRUE)
na.rm(as.integer(n))
rm.na(as.integer(n))
as.integer(n)
View(as.integer(n))
integerized <- as.integer(n[0:190])
integerized
mean(integerized)
countryNames <- c("United pini","pini united", "United jjj")
grep("^United",countryNames), 4
grep("^United",countryNames)
grep("^United",DT$X.2)
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
mean
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
numberOfStatesThatstartWithUnited
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
setwd("~/workspace/datasciencecoursera/GettingCleaningData/quiz4")
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q2.R')
source('~/workspace/datasciencecoursera/GettingCleaningData/quiz4/q4.R')
